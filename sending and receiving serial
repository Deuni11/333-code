#include <avr/io.h>
#include <stdio.h>


void serial_init(void){

	UCSRC = 0b10000110; // Asynchronous mode, no parity, 1 stop bit, 8 data bits

	UCSRA = 0b00000000; // Normal speed, disable multi-proc

	UBRRL = 0x33; // Baud rate 1200bps, assuming 1MHz clock
	UBRRH = 0x00;

	UCSRB = 0b00011000; // Enable Tx and Rx, disable interrupts
}


int serial_send(char c, FILE *stream){
	while ((UCSRA & (1 << UDRE)) == 0x00){;} // Wait until UDRE flag is set to logic 1
	UDR = c;                                // Write character to UDR for transmission
	return 0;
}

int serial_receive(FILE *stream){
	while ((UCSRA & (1 << RXC)) == 0x00){;} // Wait until RXC flag is set to logic 1
	return UDR;     // Read the received character from UDR
}


//main function has errors 
int main(void){
	unsigned int a;
	unsigned int b;
	
serial_init();
	// ... Code to initialise baudrate, TXD, RXD, and so on is not shown here



	stdout = fdevopen(serial_send, NULL); // Initialise the standard IO handlers
	stdin = fdevopen(NULL, serial_receive);



	while (1){
		printf(“\n\rinteger a = ");
		scanf("%d", &a)
		printf(“\n\rinteger b = ");
		scanf(“%d”, &b);
		
		 printf("a+b=%d”, a+b);
		 printf(“a-b=%d”, a-b);
		 printf(“a/b=%d”, a/b);
		 printf(“a*b=%d”, a*b);
		 
		 
		
	}
}
